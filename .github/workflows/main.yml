# Name für den Workflow
name: Deploy Vue.js to GitHub Pages

on:
  # Wird bei Pushes auf den main-Branch ausgeführt
  push:
    branches: ["main"]

  # Ermöglicht manuellen Start
  workflow_dispatch:

# Setzt die benötigten Berechtigungen für das Deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Stellt sicher, dass immer nur ein Deployment läuft
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build-Job: Erstellt die statische Seite
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node.js-Umgebung einrichten
      # Die 'cache'-Option wurde hier entfernt, um den Fehler zu umgehen.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Abhängigkeiten installieren
      - name: Install dependencies
        run: npm install

      # Die Vue-App bauen (erstellt den 'dist'-Ordner)
      - name: Build
        run: npm run build

      # GitHub Pages für das Deployment vorbereiten
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Das Build-Ergebnis (den 'dist'-Ordner) als Artefakt hochladen
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Pfad zum Ordner, der hochgeladen werden soll
          path: './dist'

  # Deploy-Job: Veröffentlicht das Artefakt
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Dieser Job wartet, bis der 'build'-Job fertig ist
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
